{
    "@context": [
        "https://w3id.org/ro/crate/1.1/context",
        {
            "GithubService": "https://w3id.org/ro/terms/test#GithubService",
            "JenkinsService": "https://w3id.org/ro/terms/test#JenkinsService",
            "PlanemoEngine": "https://w3id.org/ro/terms/test#PlanemoEngine",
            "TestDefinition": "https://w3id.org/ro/terms/test#TestDefinition",
            "TestInstance": "https://w3id.org/ro/terms/test#TestInstance",
            "TestService": "https://w3id.org/ro/terms/test#TestService",
            "TestSuite": "https://w3id.org/ro/terms/test#TestSuite",
            "TravisService": "https://w3id.org/ro/terms/test#TravisService",
            "definition": "https://w3id.org/ro/terms/test#definition",
            "engineVersion": "https://w3id.org/ro/terms/test#engineVersion",
            "instance": "https://w3id.org/ro/terms/test#instance",
            "resource": "https://w3id.org/ro/terms/test#resource",
            "runsOn": "https://w3id.org/ro/terms/test#runsOn"
        }
    ],
    "@graph": [
        {
            "@id": "./",
            "@type": "Dataset",
            "creativeWorkStatus": "InProgress",
            "datePublished": "2025-03-12T09:53:43+00:00",
            "description": "<h1>\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/images/nf-core-bacass_logo_dark.png\">\n    <img alt=\"nf-core/bacass\" src=\"docs/images/nf-core-bacass_logo_light.png\">\n  </picture>\n</h1>\n\n[![GitHub Actions CI Status](https://github.com/nf-core/bacass/actions/workflows/ci.yml/badge.svg)](https://github.com/nf-core/bacass/actions/workflows/ci.yml)\n[![GitHub Actions Linting Status](https://github.com/nf-core/bacass/actions/workflows/linting.yml/badge.svg)](https://github.com/nf-core/bacass/actions/workflows/linting.yml)[![AWS CI](https://img.shields.io/badge/CI%20tests-full%20size-FF9900?labelColor=000000&logo=Amazon%20AWS)](https://nf-co.re/bacass/results)[![Cite with Zenodo](http://img.shields.io/badge/DOI-10.5281/zenodo.XXXXXXX-1073c8?labelColor=000000)](https://doi.org/10.5281/zenodo.XXXXXXX)\n[![nf-test](https://img.shields.io/badge/unit_tests-nf--test-337ab7.svg)](https://www.nf-test.com)\n\n[![Nextflow](https://img.shields.io/badge/nextflow%20DSL2-%E2%89%A524.04.2-23aa62.svg)](https://www.nextflow.io/)\n[![run with conda](http://img.shields.io/badge/run%20with-conda-3EB049?labelColor=000000&logo=anaconda)](https://docs.conda.io/en/latest/)\n[![run with docker](https://img.shields.io/badge/run%20with-docker-0db7ed?labelColor=000000&logo=docker)](https://www.docker.com/)\n[![run with singularity](https://img.shields.io/badge/run%20with-singularity-1d355c.svg?labelColor=000000)](https://sylabs.io/docs/)\n[![Launch on Seqera Platform](https://img.shields.io/badge/Launch%20%F0%9F%9A%80-Seqera%20Platform-%234256e7)](https://cloud.seqera.io/launch?pipeline=https://github.com/nf-core/bacass)\n\n[![Get help on Slack](http://img.shields.io/badge/slack-nf--core%20%23bacass-4A154B?labelColor=000000&logo=slack)](https://nfcore.slack.com/channels/bacass)[![Follow on Twitter](http://img.shields.io/badge/twitter-%40nf__core-1DA1F2?labelColor=000000&logo=twitter)](https://twitter.com/nf_core)[![Follow on Mastodon](https://img.shields.io/badge/mastodon-nf__core-6364ff?labelColor=FFFFFF&logo=mastodon)](https://mstdn.science/@nf_core)[![Watch on YouTube](http://img.shields.io/badge/youtube-nf--core-FF0000?labelColor=000000&logo=youtube)](https://www.youtube.com/c/nf-core)\n\n## Introduction\n\n**nf-core/bacass** is a bioinformatics best-practice analysis pipeline for simple bacterial assembly and annotation. The pipeline is able to assemble short reads, long reads, or a mixture of short and long reads (hybrid assembly).\n\nThe pipeline is built using [Nextflow](https://www.nextflow.io), a workflow tool to run tasks across multiple compute infrastructures in a very portable manner. It uses Docker/Singularity containers making installation trivial and results highly reproducible. The [Nextflow DSL2](https://www.nextflow.io/docs/latest/dsl2.html) implementation of this pipeline uses one container per process which makes it much easier to maintain and update software dependencies.\n\nOn release, automated continuous integration tests run the pipeline on a full-sized dataset on the AWS cloud infrastructure. This ensures that the pipeline runs on AWS, has sensible resource allocation defaults set to run on real-world datasets, and permits the persistent storage of results to benchmark between pipeline releases and other analysis sources. The results obtained from the full-sized test can be viewed on the [nf-core website](https://nf-co.re/bacass/results).\n\n## Pipeline summary\n\n### Short Read Assembly\n\nThis pipeline is primarily for bacterial assembly of next-generation sequencing reads. It can be used to quality trim your reads using [FastP](https://github.com/OpenGene/fastp) and performs basic sequencing QC using [FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/). Afterwards, the pipeline performs read assembly using [Unicycler](https://github.com/rrwick/Unicycler). Contamination of the assembly is checked using [Kraken2](https://ccb.jhu.edu/software/kraken2/) and [Kmerfinder](https://bitbucket.org/genomicepidemiology/kmerfinder/src/master/) to verify sample purity.\n\n### Long Read Assembly\n\nFor users that only have Nanopore data, the pipeline quality trims these using [PoreChop](https://github.com/rrwick/Porechop) and assesses basic sequencing QC utilizing [NanoPlot](https://github.com/wdecoster/NanoPlot) and [PycoQC](https://github.com/a-slide/pycoQC). Contamination of the assembly is checked using [Kraken2](https://ccb.jhu.edu/software/kraken2/) and [Kmerfinder](https://bitbucket.org/genomicepidemiology/kmerfinder/src/master/) to verify sample purity.\n\nThe pipeline can then perform long read assembly utilizing [Unicycler](https://github.com/rrwick/Unicycler), [Miniasm](https://github.com/lh3/miniasm) in combination with [Racon](https://github.com/isovic/racon), [Canu](https://github.com/marbl/canu) or [Flye](https://github.com/fenderglass/Flye) by using the [Dragonflye](https://github.com/rpetit3/dragonflye) pipeline. Long reads assembly can be polished using [Medaka](https://github.com/nanoporetech/medaka) or [NanoPolish](https://github.com/jts/nanopolish) with Fast5 files.\n\n## Usage\n\nFirst, prepare a samplesheet with your input data that looks as follows:\n\n```tsv\nID\tR1\tR2\tLongFastQ\tFast5\tGenomeSize\nshortreads\t./data/S1_R1.fastq.gz\t./data/S1_R2.fastq.gz\tNA\tNA\tNA\nlongreads\tNA\tNA\t./data/S1_long_fastq.gz\t./data/FAST5\t2.8m\nshortNlong\t./data/S1_R1.fastq.gz\t./data/S1_R2.fastq.gz\t./data/S1_long_fastq.gz\t./data/FAST5\t2.8m\n```\n\nNow, you can run the pipeline using:\n\n```bash\nnextflow run nf-core/bacass \\n   -profile <docker/singularity/.../institute> \\n   --input samplesheet.tsv \\n   --outdir <OUTDIR>\n```\n\n## Credits\n\n**nf-core/bacass** was originally written by Andreas Wilm, Alexander Peltzer.\n\n## Contributions and Support\n\nIf you would like to contribute to this pipeline, please see the [contributing guidelines](.github/CONTRIBUTING.md).\n\nFor further information or help, don't hesitate to get in touch on the [Slack `#bacass` channel](https://nfcore.slack.com/channels/bacass).\n\n## Citations\n\nIf you use nf-core/bacass for your analysis, please cite it using the following doi: [10.5281/zenodo.2669428](https://doi.org/10.5281/zenodo.2669428).\n",
            "hasPart": [
                {
                    "@id": "main.nf"
                },
                {
                    "@id": "assets/"
                },
                {
                    "@id": "conf/"
                },
                {
                    "@id": "docs/"
                },
                {
                    "@id": "docs/images/"
                },
                {
                    "@id": "modules/"
                },
                {
                    "@id": "modules/nf-core/"
                },
                {
                    "@id": "workflows/"
                },
                {
                    "@id": "subworkflows/"
                },
                {
                    "@id": "nextflow.config"
                },
                {
                    "@id": "README.md"
                },
                {
                    "@id": "nextflow_schema.json"
                },
                {
                    "@id": "CHANGELOG.md"
                },
                {
                    "@id": "LICENSE"
                },
                {
                    "@id": "CODE_OF_CONDUCT.md"
                },
                {
                    "@id": "CITATIONS.md"
                },
                {
                    "@id": "modules.json"
                },
                {
                    "@id": "docs/usage.md"
                },
                {
                    "@id": "docs/output.md"
                },
                {
                    "@id": ".nf-core.yml"
                },
                {
                    "@id": ".pre-commit-config.yaml"
                },
                {
                    "@id": ".prettierignore"
                }
            ],
            "isBasedOn": "https://github.com/nf-core/bacass",
            "license": "MIT",
            "mainEntity": {
                "@id": "main.nf"
            },
            "mentions": [
                {
                    "@id": "#b21b9f13-ab02-4989-a2a0-47a7f9741a32"
                }
            ],
            "name": "nf-core/bacass"
        },
        {
            "@id": "ro-crate-metadata.json",
            "@type": "CreativeWork",
            "about": {
                "@id": "./"
            },
            "conformsTo": [
                {
                    "@id": "https://w3id.org/ro/crate/1.1"
                },
                {
                    "@id": "https://w3id.org/workflowhub/workflow-ro-crate/1.0"
                }
            ]
        },
        {
            "@id": "main.nf",
            "@type": [
                "File",
                "SoftwareSourceCode",
                "ComputationalWorkflow"
            ],
            "creator": [
                {
                    "@id": "https://orcid.org/0000-0002-7344-3764"
                },
                {
                    "@id": "https://orcid.org/0000-0002-7344-3764"
                },
                {
                    "@id": "https://orcid.org/0000-0002-6503-2180"
                },
                {
                    "@id": "#ben.taylor@sanger.ac.uk"
                }
            ],
            "dateCreated": "",
            "dateModified": "2025-03-12T10:53:43Z",
            "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/",
            "keywords": [
                "nf-core",
                "nextflow",
                "assembly",
                "bacterial-genomes",
                "denovo",
                "denovo-assembly",
                "genome-assembly",
                "hybrid-assembly",
                "nanopore",
                "nanopore-sequencing"
            ],
            "license": [
                "MIT"
            ],
            "maintainer": [
                {
                    "@id": "https://orcid.org/0000-0002-7344-3764"
                },
                {
                    "@id": "https://orcid.org/0000-0002-6503-2180"
                }
            ],
            "name": [
                "nf-core/bacass"
            ],
            "programmingLanguage": {
                "@id": "https://w3id.org/workflowhub/workflow-ro-crate#nextflow"
            },
            "sdPublisher": {
                "@id": "https://nf-co.re/"
            },
            "url": [
                "https://github.com/nf-core/bacass",
                "https://nf-co.re/bacass/dev/"
            ],
            "version": [
                "2.5.0dev"
            ]
        },
        {
            "@id": "https://w3id.org/workflowhub/workflow-ro-crate#nextflow",
            "@type": "ComputerLanguage",
            "identifier": {
                "@id": "https://www.nextflow.io/"
            },
            "name": "Nextflow",
            "url": {
                "@id": "https://www.nextflow.io/"
            },
            "version": "!>=24.04.2"
        },
        {
            "@id": "#b21b9f13-ab02-4989-a2a0-47a7f9741a32",
            "@type": "TestSuite",
            "instance": [
                {
                    "@id": "#c0ae98f4-eced-4cde-99ba-fe2485d171dd"
                }
            ],
            "mainEntity": {
                "@id": "main.nf"
            },
            "name": "Test suite for nf-core/bacass"
        },
        {
            "@id": "#c0ae98f4-eced-4cde-99ba-fe2485d171dd",
            "@type": "TestInstance",
            "name": "GitHub Actions workflow for testing nf-core/bacass",
            "resource": "repos/nf-core/bacass/actions/workflows/ci.yml",
            "runsOn": {
                "@id": "https://w3id.org/ro/terms/test#GithubService"
            },
            "url": "https://api.github.com"
        },
        {
            "@id": "https://w3id.org/ro/terms/test#GithubService",
            "@type": "TestService",
            "name": "Github Actions",
            "url": {
                "@id": "https://github.com"
            }
        },
        {
            "@id": "assets/",
            "@type": "Dataset",
            "description": "Additional files"
        },
        {
            "@id": "conf/",
            "@type": "Dataset",
            "description": "Configuration files"
        },
        {
            "@id": "docs/",
            "@type": "Dataset",
            "description": "Markdown files for documenting the pipeline"
        },
        {
            "@id": "docs/images/",
            "@type": "Dataset",
            "description": "Images for the documentation files"
        },
        {
            "@id": "modules/",
            "@type": "Dataset",
            "description": "Modules used by the pipeline"
        },
        {
            "@id": "modules/nf-core/",
            "@type": "Dataset",
            "description": "nf-core modules"
        },
        {
            "@id": "workflows/",
            "@type": "Dataset",
            "description": "Main pipeline workflows to be executed in main.nf"
        },
        {
            "@id": "subworkflows/",
            "@type": "Dataset",
            "description": "Smaller subworkflows"
        },
        {
            "@id": "nextflow.config",
            "@type": "File",
            "description": "Main Nextflow configuration file"
        },
        {
            "@id": "README.md",
            "@type": "File",
            "description": "Basic pipeline usage information"
        },
        {
            "@id": "nextflow_schema.json",
            "@type": "File",
            "description": "JSON schema for pipeline parameter specification"
        },
        {
            "@id": "CHANGELOG.md",
            "@type": "File",
            "description": "Information on changes made to the pipeline"
        },
        {
            "@id": "LICENSE",
            "@type": "File",
            "description": "The license - should be MIT"
        },
        {
            "@id": "CODE_OF_CONDUCT.md",
            "@type": "File",
            "description": "The nf-core code of conduct"
        },
        {
            "@id": "CITATIONS.md",
            "@type": "File",
            "description": "Citations needed when using the pipeline"
        },
        {
            "@id": "modules.json",
            "@type": "File",
            "description": "Version information for modules from nf-core/modules"
        },
        {
            "@id": "docs/usage.md",
            "@type": "File",
            "description": "Usage documentation"
        },
        {
            "@id": "docs/output.md",
            "@type": "File",
            "description": "Output documentation"
        },
        {
            "@id": ".nf-core.yml",
            "@type": "File",
            "description": "nf-core configuration file, configuring template features and linting rules"
        },
        {
            "@id": ".pre-commit-config.yaml",
            "@type": "File",
            "description": "Configuration file for pre-commit hooks"
        },
        {
            "@id": ".prettierignore",
            "@type": "File",
            "description": "Ignore file for prettier"
        },
        {
            "@id": "https://nf-co.re/",
            "@type": "Organization",
            "name": "nf-core",
            "url": "https://nf-co.re/"
        },
        {
            "@id": "https://orcid.org/0000-0002-7344-3764",
            "@type": "Person",
            "email": "wilma@gis.a-star.edu.sg",
            "name": "Andreas Wilm"
        },
        {
            "@id": "https://orcid.org/0000-0002-6503-2180",
            "@type": "Person",
            "email": "apeltzer@users.noreply.github.com",
            "name": "Alexander Peltzer"
        },
        {
            "@id": "#ben.taylor@sanger.ac.uk",
            "@type": "Person",
            "email": "ben.taylor@sanger.ac.uk",
            "name": "Ben Taylor"
        }
    ]
}